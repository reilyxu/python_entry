#9-1 restaurant
class Restaurant():
	"""创建一个名为Restaurant的类"""
	def __init__(self,restaurant_name,cuisine_type):
		"""初始化属性"""
		self.restaurant_name=restaurant_name
		self.cuisine_type=cuisine_type
	def describe_restaurant(self):
  """方法1:打印两个属性"""
		print(self.restaurant_name.title()+" provides "+
			self.cuisine_type+".")
	def open_restaurant(self):
  """方法2:打印开张中"""
		print(self.restaurant_name.title()+" is opening!")

restaurant=Restaurant('KFC','Fast Food')
print(restaurant.restaurant_name+" "+restaurant.cuisine_type)
restaurant.describe_restaurant()
"""调用方法1"""
restaurant.open_restaurant()

#9-2 3 restaurant
restaurant1=Restaurant('hai di lao','hotpod')
restaurant2=Restaurant('mei zhou dong po','chuan')
restaurant1.describe_restaurant()
restaurant2.describe_restaurant()
"""省略"""

#9-3 user
class Users():
"""用户信息的类"""
	def __init__(self,first_name,last_name,gender,age):
		self.first_name=first_name
		self.last_name=last_name
		self.gender=gender
		self.age=age
	def describe_user(self):
  """打印信息"""
		print(self.first_name.title()+", "+self.last_name.title()
			+", "+self.gender+", "+str(self.age))
	def greet_user(self):
  """打招呼"""
		print("Hello! "+self.first_name.title()+" "+self.
			last_name.title())

user1=Users('reily','xu','female','22')
user1.describe_user()
user1.greet_user()

#9-4 就餐人数
class Restaurant():
	""""创建一个名为Restaurant的类"""
	def __init__(self,restaurant_name,cuisine_type):
		""""初始化属性"""
		self.restaurant_name=restaurant_name
		self.cuisine_type=cuisine_type
		self.number_served=0
	def describe_restaurant(self):
		print(self.restaurant_name.title()+" provides "+
			self.cuisine_type+".")
	def increment_numbers(self,number):
	"""增加就餐人数"""
		if number>=0:
			self.number_served+=number
		else:
			print("you can't roll back the number.")
		print('We have served '+str(self.number_served)+' customers. ')
	def open_restaurant(self):
		print(self.restaurant_name.title()+" is opening!")

restaurant=Restaurant('KFC','Fast Food')
print(restaurant.restaurant_name+" "+restaurant.cuisine_type)
restaurant.describe_restaurant()
restaurant.increment_numbers(50)
restaurant.open_restaurant()

#9-5 尝试登陆次数
class Users():
	def __init__(self,first_name,last_name,gender,age):
		self.first_name=first_name
		self.last_name=last_name
		self.gender=gender
		self.age=age
		self.login_attempts=0
	def describe_user(self):
		print(self.first_name.title()+", "+self.last_name.title()
			+", "+self.gender+", "+str(self.age))
	def greet_user(self):
		print("Hello! "+self.first_name.title()+" "+self.
			last_name.title())
	def increment_login_attempts(self):
		self.login_attempts+=1
		print('you have logined '+str(self.login_attempts)+' times.')
	def reset_login_attempts(self):
		self.login_attempts=0
		print('your login attempts have cleaned.')

user1=Users('reily','xu','female','24')
user1.describe_user()
user1.greet_user()
user1.increment_login_attempts()
user1.increment_login_attempts()
user1.reset_login_attempts()

#9-6 冰淇淋小店
class Restaurant():
	def __init__(self,restaurant_name,cuisine_type):
		self.restaurant_name=restaurant_name
		self.cuisine_type=cuisine_type
		self.number_served=0
	def describe_restaurant(self):
		print(self.restaurant_name.title()+" provides "+
			self.cuisine_type+".")
	def increment_numbers(self,number):
		if number>=0:
			self.number_served+=number
		else:
			print("you can't roll back the number.")
		print('We have served '+str(self.number_served)+' customers. ')
	def open_restaurant(self):
		print(self.restaurant_name.title()+" is opening!")

class IceCreamStand(Restaurant):
	def __init__(self,restaurant_name,cuisine_type):
		super().__init__(restaurant_name,cuisine_type)
		self.flavors=[]
	def addflavor(self,newflavor):
		self.flavors.append(newflavor)
	def reporticecream(self):
		print('we have following flavors: ')
		for self.flavor in self.flavors:
			print(self.flavor.title())

myicecream=IceCreamStand('haagen dazs','ice cream')
myicecream.describe_restaurant()
myicecream.addflavor('green tea')
myicecream.addflavor('mango')
myicecream.addflavor('chocolate')
myicecream.addflavor('milk')
myicecream.reporticecream()
